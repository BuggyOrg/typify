
> @buggyorg/typify@0.1.6-pre.2 test /home/volker/JS/typify
> mocha --timeout 10000 --compilers js:babel-register



  API tests
unifying "Number" and "generic"
typifying edge from a@p1 to b@p4 with [{"key":"generic","value":"Number"}]
unifying "generic" and "generic"
typifying edge from a@p2 to b@p3 with []
unifying "Number" and "generic"
typifying edge from a@p1 to b@p4 with [{"key":"generic","value":"Number"}]
    ✓ can apply basic rules I (1811ms)
unifying "generic" and "generic"
typifying edge from A@p1 to B@p3 with []
unifying "generic" and "String"
typifying edge from A@p2 to D@p6 with [{"key":"generic","value":"String"}]
unifying "generic" and "generic"
typifying edge from C@p5 to B@p4 with []
unifying "generic" and "generic"
typifying edge from A@p1 to B@p3 with []
    ✓ can apply basic rules II (2139ms)
unifying "String" and "IO"
unifying "String" and "IO"
unifying "IO" and "String"
unifying "IO" and "IO"
unifying "IO" and "String"
unifying "IO" and "IO"
unifying "SPair" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "SPair" and "String"
unifying "SPair" and "String"
unifying "generic" and "String"
typifying edge from undefined@const to undefined@0 with [{"key":"generic","value":"String"}]
unifying "generic" and "String"
typifying edge from undefined@const to undefined@1 with [{"key":"generic","value":"String"}]
unifying "SPair" and "SPair"
typifying edge from undefined@output to undefined@in with []
unifying "String" and "String"
typifying edge from undefined@out to undefined@text with []
unifying "generic" and "IO"
typifying edge from undefined@IO to undefined@IO_in with [{"key":"generic","value":"IO"}]
unifying "IO" and "generic"
typifying edge from undefined@IO_out to undefined@value with [{"key":"generic","value":"IO"}]
unifying "String" and "IO"
unifying "String" and "IO"
unifying "IO" and "String"
unifying "IO" and "IO"
unifying "IO" and "String"
unifying "IO" and "IO"
unifying "SPair" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "SPair" and "String"
unifying "SPair" and "String"
unifying "generic" and "String"
typifying edge from undefined@const to undefined@0 with [{"key":"generic","value":"String"}]
unifying "generic" and "String"
typifying edge from undefined@const to undefined@1 with [{"key":"generic","value":"String"}]
unifying "SPair" and "SPair"
typifying edge from undefined@output to undefined@in with []
unifying "String" and "String"
typifying edge from undefined@out to undefined@text with []
unifying "generic" and "IO"
typifying edge from undefined@IO to undefined@IO_in with [{"key":"generic","value":"IO"}]
unifying "SPair" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "String" and "String"
unifying "String" and "SPair"
unifying "SPair" and "String"
unifying "SPair" and "String"
unifying "String" and "IO"
unifying "IO" and "String"
unifying "generic" and "String"
typifying edge from undefined@const to undefined@0 with [{"key":"generic","value":"String"}]
unifying "generic" and "String"
typifying edge from undefined@const to undefined@1 with [{"key":"generic","value":"String"}]
unifying "SPair" and "SPair"
typifying edge from undefined@output to undefined@in with []
unifying "String" and "String"
typifying edge from undefined@out to undefined@text with []
unifying "String" and "String"
unifying "String" and "String"
    ✓ can typify loop problem case (4900ms)
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
typifying edge from Factorial@out to Add@in1 with []
unifying "generic" and "generic"
typifying edge from Factorial@out to Multiply@in1 with []
unifying "Number" and "generic"
typifying edge from Const@out to Add@in2 with [{"key":"generic","value":"Number"}]
unifying "generic" and "generic"
typifying edge from Add@out to Recursion@in with []
unifying "generic" and "generic"
typifying edge from Recursion@out to Multiply@in2 with []
unifying "generic" and "generic"
typifying edge from Multiply@out to Output@in with []
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
    1) can typify recursive function (factorial)
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
typifying edge from Binomial@in1 to Add1@in1 with []
unifying "generic" and "generic"
typifying edge from Binomial@in2 to Add2@in1 with []
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add1@in2 with [{"key":"generic","value":"Number"}]
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add2@in2 with [{"key":"generic","value":"Number"}]
unifying "generic" and "generic"
typifying edge from Add1@out to Rec1@in1 with []
unifying "generic" and "generic"
typifying edge from Add2@out to Rec1@in2 with []
unifying "generic" and "generic"
typifying edge from Add1@out to Rec2@in1 with []
unifying "generic" and "generic"
typifying edge from Binomial@in2 to Rec2@in2 with []
unifying "generic" and "generic"
typifying edge from Rec1@out to Add3@in1 with []
unifying "generic" and "generic"
typifying edge from Rec2@out to Add3@in2 with []
unifying "generic" and "generic"
typifying edge from Add3@out to Binomial@out with []
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
typifying edge from Binomial@in1 to Add1@in1 with []
unifying "generic" and "generic"
typifying edge from Binomial@in2 to Add2@in1 with []
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add1@in2 with [{"key":"generic","value":"Number"}]
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add2@in2 with [{"key":"generic","value":"Number"}]
unifying "generic" and "generic"
typifying edge from Add1@out to Rec1@in1 with []
unifying "generic" and "generic"
typifying edge from Add2@out to Rec1@in2 with []
unifying "generic" and "generic"
typifying edge from Add1@out to Rec2@in1 with []
unifying "generic" and "generic"
typifying edge from Binomial@in2 to Rec2@in2 with []
unifying "generic" and "generic"
typifying edge from Rec1@out to Add3@in1 with []
unifying "generic" and "generic"
typifying edge from Rec2@out to Add3@in2 with []
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
typifying edge from Binomial@in1 to Add1@in1 with []
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add1@in2 with [{"key":"generic","value":"Number"}]
unifying "Number" and "generic"
typifying edge from MinusOne@out to Add2@in2 with [{"key":"generic","value":"Number"}]
unifying "generic" and "generic"
typifying edge from Add1@out to Rec1@in1 with []
unifying "generic" and "generic"
typifying edge from Add2@out to Rec1@in2 with []
unifying "generic" and "generic"
typifying edge from Add1@out to Rec2@in1 with []
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
unifying "generic" and "generic"
    2) can typify recursive function (binomial)
unifying {"data":["a","Number"],"name":"Pair"} and {"data":["String","b"],"name":"Pair"}
unifying "a" and "String"
unifying "Number" and "b"
    3) can unify simple types
unifying {"name":"Generic Array","base":"Function","arguments":["N"],"data":["e"]} and {"name":"Generic Function","base":"Function","arguments":["a"],"data":["e"]}
unifying "e" and "e"
{"name":"Generic Array","base":"Function","arguments":["N"],"data":["e"]}
    4) can unify function types


  3 passing (37s)
  4 failing

  1) API tests can typify recursive function (factorial):
     AssertionError: expected false to be true
      at Context.<anonymous> (test/api.js:287:5)

  2) API tests can typify recursive function (binomial):
     Error: timeout of 10000ms exceeded. Ensure the done() callback is being called in this test.
  

  3) API tests can unify simple types:
     AssertionError: expected undefined to exist
      at Context.<anonymous> (test/api.js:314:7)

  4) API tests can unify function types:
     AssertionError: expected undefined to exist
      at Context.<anonymous> (test/api.js:343:7)



